name: Build FFmpeg Lean (Windows x64)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/ffmpeg-lean.yml'

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MINGW64 + GCC)
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >
            base-devel
            git
            make
            nasm
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-python

      # ---------- Build x264 (static, with ASM) ----------
      - name: Fetch x264
        shell: msys2 {0}
        run: |
          git clone --depth 1 https://code.videolan.org/videolan/x264.git x264

      - name: Build x264 (static)
        shell: msys2 {0}
        env:
          CC: gcc
          AR: ar
          RANLIB: ranlib
          STRIP: strip
        run: |
          set -e
          cd x264
          ./configure \
            --host=x86_64-w64-mingw32 \
            --enable-static \
            --disable-cli
          make -j$(nproc)
          make install
          ${STRIP} /mingw64/lib/libx264.a || true

      # ---------- Build FFmpeg (lean + ddagrab) ----------
      - name: Fetch FFmpeg
        shell: msys2 {0}
        run: |
          git clone --depth 1 https://github.com/FFmpeg/FFmpeg.git ffmpeg

      - name: Configure FFmpeg (lean + optimized)
        shell: msys2 {0}
        env:
          CC: gcc
          CXX: g++
          AR: ar
          RANLIB: ranlib
          LD: gcc
        run: |
          set -e
          cd ffmpeg

          # High-performance opts (safe on modern CPUs). Use -march=x86-64 if you need broader compatibility.
          OPTS="-O3 -pipe -march=x86-64-v3 -fdata-sections -ffunction-sections -fvisibility=hidden -flto"
          LDFLAGS="-Wl,--gc-sections -flto"

          ./configure \
            --target-os=mingw32 \
            --arch=x86_64 \
            --enable-cross-compile \
            --cc=$CC --cxx=$CXX --ar=$AR --ranlib=$RANLIB --ld=$LD \
            --optflags="$OPTS" \
            --extra-cflags="$OPTS" \
            --extra-cxxflags="$OPTS" \
            --extra-ldflags="$LDFLAGS" \
            --disable-debug \
            --enable-optimizations \
            --disable-doc \
            --disable-programs --enable-ffmpeg \
            --disable-network \
            --disable-autodetect \
            --disable-everything \
            --enable-w32threads \
            --enable-dxva2 --enable-d3d11va \
            \
            # ---- Inputs for Windows capture ----
            --enable-indev=ddagrab \
            --enable-indev=gdigrab \
            --enable-indev=dshow \
            --enable-indev=lavfi \
            \
            # ---- Protocols ----
            --enable-protocol=file,pipe \
            \
            # ---- Muxers / Demuxers ----
            --enable-muxer=mp4,matroska,mov,flv,segment,null \
            --enable-demuxer=lavfi \
            \
            # ---- Filters (minimal but useful for capture) ----
            --enable-filter=anull \
            --enable-filter=aresample \
            --enable-filter=asetpts \
            --enable-filter=fps \
            --enable-filter=format \
            --enable-filter=hwupload \
            --enable-filter=setpts \
            --enable-filter=scale \
            \
            # ---- Codecs ----
            --enable-gpl \
            --enable-libx264 \
            --enable-encoder=libx264,aac,pcm_s16le \
            --enable-decoder=rawvideo,aac,pcm_s16le \
            --enable-bsf=h264_mp4toannexb \
            --enable-parsers \
            \
            # ---- HW accel (playback/filter support) ----
            --enable-hwaccel=h264_d3d11va \
            --enable-hwaccel=hevc_d3d11va

      - name: Build & Install FFmpeg
        shell: msys2 {0}
        run: |
          cd ffmpeg
          make -j$(nproc)
          make install
          strip /mingw64/bin/ffmpeg.exe || true
          strip /mingw64/bin/ffprobe.exe || true

      - name: Package artifacts
        shell: bash
        run: |
          set -e
          mkdir -p dist/bin dist/licenses
          cp "C:/msys64/mingw64/bin/ffmpeg.exe" dist/bin/
          cp "C:/msys64/mingw64/bin/ffprobe.exe" dist/bin/ || true
          echo "FFmpeg is licensed under LGPL/GPL; x264 under GPL. Comply with their terms." > dist/licenses/README.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-lean-windows-x64
          path: dist
