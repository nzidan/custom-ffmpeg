name: Build FFmpeg Lean (Windows x64)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/ffmpeg-lean.yml'

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MinGW-w64 clang)
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >
            base-devel
            git
            make
            nasm
            mingw-w64-clang-x86_64-toolchain
            mingw-w64-clang-x86_64-pkg-config
            mingw-w64-clang-x86_64-python

      # ---------- Build libx264 (static, minimal) ----------
      - name: Fetch x264
        shell: msys2 {0}
        run: |
          git clone --depth 1 https://code.videolan.org/videolan/x264.git x264

      - name: Build x264 (static)
        shell: msys2 {0}
        run: |
          set -e
          cd x264
          ./configure \
            --host=x86_64-w64-mingw32 \
            --enable-static \
            --disable-cli \
            --disable-lavf \
            --disable-swscale \
            --disable-asm=no
          make -j$(nproc)
          make install

      # ---------- Build FFmpeg (lean, optimized) ----------
      - name: Fetch FFmpeg
        shell: msys2 {0}
        run: |
          git clone --depth 1 https://github.com/FFmpeg/FFmpeg.git ffmpeg

      - name: Configure FFmpeg (lean + ddagrab)
        shell: msys2 {0}
        env:
          CC: clang
          CXX: clang++
          AR: llvm-ar
          RANLIB: llvm-ranlib
          LD: clang
        run: |
          set -e
          cd ffmpeg

          # Aggressive but broadly-compatible CPU tuning for modern x86_64:
          OPTS="-O3 -march=x86-64-v3 -ffunction-sections -fdata-sections -fvisibility=hidden"

          ./configure \
            --target-os=mingw32 \
            --arch=x86_64 \
            --enable-cross-compile \
            --cc=clang --cxx=clang++ --ar=llvm-ar --ranlib=llvm-ranlib --ld=clang \
            --optflags="$OPTS" \
            --extra-cflags="$OPTS" \
            --extra-cxxflags="$OPTS" \
            --extra-ldflags="-Wl,--gc-sections" \
            --enable-lto \
            --disable-debug \
            --enable-optimizations \
            --disable-doc \
            --disable-programs --enable-ffmpeg \
            --disable-network \
            --disable-autodetect \
            --disable-everything \
            --enable-w32threads \
            --enable-dxva2 --enable-d3d11va \
            \
            # ---- Inputs for Windows capture ----
            --enable-indev=ddagrab \
            --enable-indev=gdigrab \
            --enable-indev=dshow \
            --enable-indev=lavfi \
            \
            # ---- Protocols ----
            --enable-protocol=file,pipe \
            \
            # ---- Muxers / Demuxers ----
            --enable-muxer=mp4,matroska,mov,flv,segment,null \
            --enable-demuxer=lavfi \
            \
            # ---- Filters (minimal but useful for capture) ----
            --enable-filter=anull \
            --enable-filter=aresample \
            --enable-filter=asetpts \
            --enable-filter=copy \
            --enable-filter=fps \
            --enable-filter=format \
            --enable-filter=hwupload \
            --enable-filter=setpts \
            --enable-filter=scale \
            \
            # ---- Codecs ----
            --enable-gpl \
            --enable-libx264 \
            --enable-encoder=libx264,aac,pcm_s16le \
            --enable-decoder=rawvideo,aac,pcm_s16le \
            --enable-bsf=h264_mp4toannexb \
            --enable-parsers \
            \
            # ---- HW accel list (for future-proofing playback/filters) ----
            --enable-hwaccel=h264_d3d11va \
            --enable-hwaccel=hevc_d3d11va

      - name: Build FFmpeg
        shell: msys2 {0}
        run: |
          cd ffmpeg
          make -j$(nproc)
          make install

      - name: Package artifacts
        shell: bash
        run: |
          mkdir -p dist/bin
          # Copy MinGW64 bin directory where ffmpeg.exe was installed
          # MSYS2 installs to C:\msys64\mingw64\bin by default
          cp "C:/msys64/mingw64/bin/ffmpeg.exe" dist/bin/
          cp "C:/msys64/mingw64/bin/ffprobe.exe" dist/bin/ || true
          # Minimal licenses
          mkdir -p dist/licenses
          echo "FFmpeg and x264 licenses" > dist/licenses/README.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-lean-windows-x64
          path: dist
