name: Build static FFmpeg (Windows, x264, ddagrab)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ "v*" ]

jobs:
  windows:
    name: Windows (MSYS2 MinGW64) â€” patched first, fully static
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            make
            patch
            autoconf
            automake
            libtool
            nasm
            yasm
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            zip

      - name: Build x264 and FFmpeg (static) + apply Windows patches first
        run: |
          set -euxo pipefail
          mkdir -p ffmpeg && cd ffmpeg

          # Get latest sources
          git clone --depth=1 https://git.ffmpeg.org/ffmpeg.git ffmpeg
          git clone --depth=1 https://code.videolan.org/videolan/x264.git

          # ---- Apply patches FIRST (Windows-specific, then optional common) ----
          cd ffmpeg
          apply_patches_dir() {
            local dir="$1"
            if [ -d "$dir" ]; then
              shopt -s nullglob
              for p in "$dir"/*.patch; do
                echo "Applying patch: $p"
                git apply --ignore-whitespace "$p"
              done
            else
              echo "No patch dir: $dir (skipping)"
            fi
          }
          apply_patches_dir ../../ffmpeg_patches/win
          apply_patches_dir ../../ffmpeg_patches/common
          cd ..

          # ---- Build x264 (static only) ----
          cd x264
          ./configure --enable-static --disable-shared --disable-cli --disable-opencl --prefix=$PWD
          make -j"$(nproc)"
          make install
          # Ensure ffmpeg finds the static .pc
          export PKG_CONFIG_PATH="$PWD:$PWD/lib/pkgconfig"

          # ---- Build FFmpeg (static + d3d11va + ddagrab; fix clock_gettime64) ----
          cd ../ffmpeg
          export PKG_CONFIG="pkg-config --static"
          ./configure \
            --pkg-config-flags="--static" \
            --disable-shared \
            --enable-static \
            --enable-gpl \
            --enable-libx264 \
            --enable-ffmpeg \
            --enable-d3d11va \
            --enable-indev=ddagrab \
            --disable-ffplay \
            --disable-ffprobe \
            --disable-sdl2 \
            --disable-bzlib \
            --disable-iconv \
            --disable-zlib \
            --disable-lzma \
            --extra-cflags="-static -static-libgcc -static-libstdc++ -D_WIN32_WINNT=0x0A00" \
            --extra-ldflags="-static -static-libgcc -static-libstdc++ -Wl,-Bstatic -lwinpthread -Wl,-Bdynamic -ld3d11 -ldxgi -ldxguid -lole32 -luuid"
          make -j"$(nproc)"

          # ---- Verify 'ddagrab' is compiled in ----
          mkdir -p ../../artifacts/windows
          ./ffmpeg -hide_banner -devices | tee ../../artifacts/windows/devices.txt
          if ! ./ffmpeg -hide_banner -f ddagrab -list_devices true -i dummy 1>../../artifacts/windows/ddagrab_stdout.txt 2>../../artifacts/windows/ddagrab_stderr.txt; then true; fi
          grep -qi ddagrab ../../artifacts/windows/devices.txt || { echo "ERROR: ddagrab not built"; exit 1; }

          # ---- Optional: confirm no dynamic winpthread/UCRT symbol deps ----
          objdump -p ./ffmpeg | grep -i "DLL Name" || true

          # ---- Package (zip just the binary) ----
          exe="ffmpeg.exe"
          if [ ! -f "$exe" ]; then exe="ffmpeg_g.exe"; fi
          cp -f "./$exe" ../../artifacts/windows/ffmpeg.exe
          cd ../../artifacts/windows
          zip -9 ffmpeg-windows-static.zip ffmpeg.exe devices.txt ddagrab_stdout.txt ddagrab_stderr.txt

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-windows-static
          path: artifacts/windows/ffmpeg-windows-static.zip
